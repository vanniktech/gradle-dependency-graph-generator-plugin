import org.gradle.api.internal.classpath.ModuleRegistry
import org.gradle.api.internal.project.ProjectInternal

buildscript {
  ext.kotlinVersion = '1.8.20'

  repositories {
    mavenCentral()
    google()
    gradlePluginPortal()
    mavenLocal()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath 'com.vanniktech:gradle-code-quality-tools-plugin:0.22.0'
    classpath 'com.vanniktech:gradle-maven-publish-plugin:0.25.1'
  }
}

apply plugin: 'java-library'
apply plugin: 'java-gradle-plugin'
apply plugin: 'kotlin'
apply plugin: 'com.vanniktech.code.quality.tools'
apply plugin: "com.vanniktech.maven.publish"

validatePlugins {
  enableStricterValidation = true
}

codeQualityTools {
  ktlint {
    toolVersion = "0.47.1"
  }
  detekt {
    enabled = false
  }
  pmd {
    enabled = false
  }
  checkstyle {
    enabled = false
  }
  cpd {
    enabled = false
  }
}

gradlePlugin {
  plugins {
    graphGeneratorDependencyPlugin {
      id = 'com.vanniktech.dependency.graph.generator'
      implementationClass = 'com.vanniktech.dependency.graph.generator.DependencyGraphGeneratorPlugin'
    }
  }
}

repositories {
  mavenCentral()
  google()
  gradlePluginPortal()
}

dependencies {
  implementation localGroovy()
  implementation gradleApi()
  api "guru.nidi:graphviz-java:0.18.1"

  testImplementation 'junit:junit:4.13.2'
  testImplementation "com.android.tools.build:gradle:7.3.1"
  testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

  // https://github.com/gradle/gradle/issues/16774#issuecomment-893493869
  def toolingApiBuildersJar = (project as ProjectInternal).services.get(ModuleRegistry.class)
    .getModule("gradle-tooling-api-builders")
    .classpath
    .asFiles
    .first()
  testRuntimeOnly(files(toolingApiBuildersJar))
}

sourceCompatibility = JavaVersion.VERSION_1_8

wrapper {
  gradleVersion = '7.6.1'
  distributionType = Wrapper.DistributionType.ALL
}

test {
  testLogging {
    exceptionFormat "full"
  }
  jvmArgs("-Xmx2048m")
}
